name: Build and Deploy to EC2

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
env:
  PROJECT_NAME: moimtogether_project
  BUCKET_NAME: moimtogether-bucket
  CODE_DEPLOY_APP_NAME: moimtogether_cicd
  DEPLOYMENT_GROUP_NAME: moimtogether_instance
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build -x test
        shell: bash

      - name: Make Zip File
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2          
 
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Cancel Active Deployment If Exists
        run: |
          ACTIVE_DEPLOYMENT=$(aws deploy list-deployments \
            --application-name $CODE_DEPLOY_APP_NAME \
            --deployment-group-name $DEPLOYMENT_GROUP_NAME \
            --query "deployments[0]" --output text)

          if [ "$ACTIVE_DEPLOYMENT" != "None" ]; then
            STATUS=$(aws deploy get-deployment \
              --deployment-id $ACTIVE_DEPLOYMENT \
              --query "deploymentInfo.status" --output text)

            if [[ "$STATUS" == "Created" || "$STATUS" == "Queued" || "$STATUS" == "InProgress" ]]; then
              echo "Cancelling active deployment: $ACTIVE_DEPLOYMENT"
              aws deploy stop-deployment --deployment-id $ACTIVE_DEPLOYMENT

              echo "Waiting for deployment cancellation..."
              while true; do
                STATUS=$(aws deploy get-deployment \
                  --deployment-id $ACTIVE_DEPLOYMENT \
                  --query "deploymentInfo.status" --output text)

                if [[ "$STATUS" == "Succeeded" || "$STATUS" == "Failed" || "$STATUS" == "Stopped" ]]; then
                  echo "Deployment cancelled successfully."
                  break
                fi
                
                echo "Deployment still active... waiting 10 seconds."
                sleep 10
              done
            else
              echo "Deployment is already in state: $STATUS. No need to cancel."
            fi
          fi

      - name: Code Deploy To EC2 instance
        run: aws deploy create-deployment \
                --application-name $CODE_DEPLOY_APP_NAME \
                --deployment-config-name CodeDeployDefault.AllAtOnce \
                --deployment-group-name $DEPLOYMENT_GROUP_NAME \
                --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
